trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  Build.Counter: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 0)]

steps:

- task: PowerShell@2
  inputs:
    filePath: 'src/SetBuildNumber.ps1'

- task: PowerShell@2
  inputs:
    filePath: 'src/ApplyVersionToAssemblies.ps1'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'src/HtmlToPdf/bin/$(buildConfiguration)'
    includeRootFolder: false
    archiveType: zip
    archiveFile: '$(Build.ArtifactStagingDirectory)/HtmlToPdf-$(Build.BuildNumber).zip'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/HtmlToPdf-$(Build.BuildNumber).zip'
    artifactName: 'HtmlToPdf-$(Build.BuildNumber)'
    publishLocation: 'Container'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    codeCoverageEnabled: True

- task: GitHubRelease@0
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceVersionMessage'], '[Release]'))
  inputs:
    gitHubConnection: icnocop
    repositoryName: '$(Build.Repository.Name)' 
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'auto'
    tag: $(Build.BuildNumber)
    assets: '$(Build.ArtifactStagingDirectory)/*'